plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.6.21'
	id 'com.github.johnrengelman.shadow' version '7.0.0'
	id 'org.cadixdev.licenser' version '0.6.0'
}

group 'me.gabytm.minecraft'
version projectVersion(2, 0, 0)

repositories {
	mavenCentral()

	maven {
		url 'https://oss.sonatype.org/content/repositories/snapshots/'
	}

	maven {
		name 'Spigot'
		url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
	}

	maven {
		name 'NBT API'
		url 'https://repo.codemc.org/repository/maven-public/'
	}

	maven {
		name 'HeadDatabase-API'
		url 'https://mvn.intellectualsites.com/content/repositories/thirdparty/'
	}

	maven {
		name 'Config'
		url 'https://repo.triumphteam.dev/snapshots'
	}

	maven {
		url 'https://jitpack.io'
	}
}

dependencies {
	compileOnly 'org.spigotmc:spigot-api:1.19-R0.1-SNAPSHOT'

	implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.6.21'

	implementation 'me.mattstudios.utils:matt-framework:1.4.6' // Commands - https://mf.mattstudios.me/mf/mf-1
	implementation 'me.mattstudios:triumph-config:1.0.5-SNAPSHOT'

	implementation 'de.tr7zw:item-nbt-api:2.10.0' // https://spigotmc.org/resources/7939/
	implementation 'net.kyori:adventure-platform-bukkit:4.1.2' // https://docs.adventure.kyori.net/getting-started

	// Heads
	compileOnly('com.arcaniax:HeadDatabase-API:1.3.1') { transitive = false }

	// Custom items
	compileOnly 'com.github.oraxen:oraxen:-SNAPSHOT' // https://spigotmc.org/resources/72448/
	compileOnly 'com.github.LoneDev6:api-itemsadder:3.0.0' // https://spigotmc.org/resources/73355/

	implementation 'commons-cli:commons-cli:1.4' // https://commons.apache.org/proper/commons-cli/index.html

	implementation 'org.bstats:bstats-bukkit:3.0.0'

	// For edit
	implementation 'dev.triumphteam:triumph-gui:3.1.3'
}

compileJava.options.encoding = "UTF-8"

compileKotlin.kotlinOptions {
	jvmTarget = JavaVersion.VERSION_1_8
	javaParameters = true
}

processResources {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
	eachFile { expand version: version }
}

license {
	header = project.file('LICENSE')

	include '**/*.kt'
	exclude '**/ServerVersion.kt'
}

shadowJar {
	archiveName("GUIHelper [${project.version}].jar")

	[
		'kotlin'                  : 'kt', // 'kt' to stop other plugins from loading it from my jar
		'org.bstats'              : 'bstats',
		'me.mattstudios.config'   : 'defaults',
		'me.mattstudios.mf'       : 'commands',
		'de.tr7zw.changeme.nbtapi': 'nbtapi',
		'dev.triumphteam'         : 'gui'
	].each { relocate(it.key, 'me.gabytm.minecraft.guihelper.libs.' + it.value) }
}

task copyJarToServer(type: Copy) {
	from shadowJar
	into "./server/plugins"
}

private static String projectVersion(int major, int minor, int patch) {
	def buildNumber = System.getenv('BUILD_NUMBER') ?: System.getProperty('BUILD_NUMBER')

	if (buildNumber == null) {
		return "$major.$minor.$patch"
	} else {
		return "$major.$minor.$patch-$buildNumber"
	}
}
